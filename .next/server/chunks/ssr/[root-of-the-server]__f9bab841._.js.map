{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\n// Your web app's Firebase configuration is read from environment variables\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase only if it hasn't been initialized yet\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nexport { app, auth, db };\n"],"names":[],"mappings":";;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,2EAA2E;AAC3E,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAEA,6DAA6D;AAC7D,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase-service.ts"],"sourcesContent":["\n'use server';\n\nimport { addDoc, collection, getDocs, doc, updateDoc, Timestamp, orderBy, query } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { AwarenessRequestForm } from '@/app/request-drive/page';\n\ntype Status = 'Pending' | 'Reviewed' | 'Completed';\n\nexport interface AwarenessRequest extends AwarenessRequestForm {\n  id: string;\n  createdAt: Timestamp;\n  status: Status;\n  preferredDate: any; // Firestore timestamp will be serialized\n}\n\n// Function to submit the awareness drive request\nexport async function submitAwarenessRequest(formData: AwarenessRequestForm) {\n  try {\n    const docRef = await addDoc(collection(db, 'awarenessRequests'), {\n      ...formData,\n      status: 'Pending',\n      createdAt: Timestamp.now(),\n    });\n    return { success: true, id: docRef.id };\n  } catch (error) {\n    console.error('Error adding document: ', error);\n    throw new Error('Failed to submit awareness request.');\n  }\n}\n\n// Function for admins to get all awareness drive requests\nexport async function getAwarenessRequests(): Promise<AwarenessRequest[]> {\n  try {\n    const requestsCol = collection(db, 'awarenessRequests');\n    const q = query(requestsCol, orderBy('createdAt', 'desc'));\n    const requestSnapshot = await getDocs(q);\n    const requestList = requestSnapshot.docs.map(doc => {\n        const data = doc.data();\n        return {\n            id: doc.id,\n            ...data,\n            // Convert Firestore Timestamp to JS Date for client-side usage\n            preferredDate: data.preferredDate.toDate(),\n            createdAt: data.createdAt.toDate(),\n        } as AwarenessRequest;\n    });\n    return requestList;\n  } catch (error) {\n    console.error('Error getting documents: ', error);\n    throw new Error('Failed to fetch awareness requests.');\n  }\n}\n\n// Function for admins to update the status of a request\nexport async function updateAwarenessRequestStatus(id: string, status: Status) {\n  try {\n    const requestDoc = doc(db, 'awarenessRequests', id);\n    await updateDoc(requestDoc, { status: status });\n    return { success: true };\n  } catch (error) {\n    console.error('Error updating document: ', error);\n    throw new Error('Failed to update request status.');\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AAAA;AACA;;;;;;AAaO,eAAe,uBAAuB,QAA8B;IACzE,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,sBAAsB;YAC/D,GAAG,QAAQ;YACX,QAAQ;YACR,WAAW,iKAAA,CAAA,YAAS,CAAC,GAAG;QAC1B;QACA,OAAO;YAAE,SAAS;YAAM,IAAI,OAAO,EAAE;QAAC;IACxC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,MAAM,IAAI,MAAM;IAClB;AACF;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,cAAc,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE;QACnC,MAAM,IAAI,CAAA,GAAA,iKAAA,CAAA,QAAK,AAAD,EAAE,aAAa,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,aAAa;QAClD,MAAM,kBAAkB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;QACtC,MAAM,cAAc,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAA;YACzC,MAAM,OAAO,IAAI,IAAI;YACrB,OAAO;gBACH,IAAI,IAAI,EAAE;gBACV,GAAG,IAAI;gBACP,+DAA+D;gBAC/D,eAAe,KAAK,aAAa,CAAC,MAAM;gBACxC,WAAW,KAAK,SAAS,CAAC,MAAM;YACpC;QACJ;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM,IAAI,MAAM;IAClB;AACF;AAGO,eAAe,6BAA6B,EAAU,EAAE,MAAc;IAC3E,IAAI;QACF,MAAM,aAAa,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,qBAAqB;QAChD,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,YAAY;YAAE,QAAQ;QAAO;QAC7C,OAAO;YAAE,SAAS;QAAK;IACzB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM,IAAI,MAAM;IAClB;AACF;;;IA/CsB;IAeA;IAuBA;;AAtCA,+OAAA;AAeA,+OAAA;AAuBA,+OAAA","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/request-drive/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {submitAwarenessRequest as '40b8aa850d65c49c5409b696c93774d2f1f3d47ffb'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/request-drive/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/request-drive/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/request-drive/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/request-drive/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/request-drive/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/request-drive/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA","debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}