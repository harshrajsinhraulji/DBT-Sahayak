{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,8OAAC,mKAAA,CAAA,UAAwB;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sYACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/india-map.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, memo } from 'react';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n} from 'react-simple-maps';\nimport { scaleQuantile } from 'd3-scale';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from './ui/tooltip';\nimport performanceData from '@/lib/dbt-performance-data.json';\n\nconst INDIA_TOPO_JSON =\n  'https://raw.githubusercontent.com/deldersveld/topojson/master/countries/india/india-states.json';\n\nconst COLOR_RANGE = ['#ff4d4d', '#ffdb4d', '#4dff4d'];\n\ninterface PerformanceData {\n    Rank: number;\n    State: string;\n    Score: number;\n}\n\nconst dataMap = new Map<string, PerformanceData>();\nperformanceData.forEach(d => dataMap.set(d.State.toUpperCase(), d));\n\nconst MapChart = ({ setTooltipContent }: { setTooltipContent: React.Dispatch<React.SetStateAction<string>> }) => {\n  const colorScale = scaleQuantile<string>()\n    .domain(performanceData.map(d => d.Score))\n    .range(COLOR_RANGE);\n\n  return (\n    <ComposableMap\n      projection=\"geoMercator\"\n      projectionConfig={{\n        scale: 900,\n        center: [82, 22],\n      }}\n      style={{ width: '100%', height: 'auto' }}\n      data-tip=\"\"\n    >\n      <ZoomableGroup>\n        <Geographies geography={INDIA_TOPO_JSON}>\n          {({ geographies }) =>\n            geographies.map(geo => {\n              const stateName = geo.properties.ST_NM.toUpperCase();\n              const d = dataMap.get(stateName);\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={() => {\n                    const { ST_NM } = geo.properties;\n                    const performance = dataMap.get(ST_NM.toUpperCase());\n                    setTooltipContent(\n                      performance\n                        ? `${ST_NM}: Rank ${performance.Rank} (Score: ${performance.Score})`\n                        : `${ST_NM}: No data`\n                    );\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent('');\n                  }}\n                  style={{\n                    default: {\n                      fill: d ? colorScale(d.Score) : '#EEE',\n                      outline: 'none',\n                      stroke: '#FFF',\n                      strokeWidth: 0.5,\n                    },\n                    hover: {\n                      fill: d ? colorScale(d.Score) : '#EEE',\n                      outline: 'none',\n                      stroke: '#333',\n                      strokeWidth: 2,\n                    },\n                    pressed: {\n                      fill: '#333',\n                      outline: 'none',\n                    },\n                  }}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ZoomableGroup>\n    </ComposableMap>\n  );\n};\n\nconst MemoizedMapChart = memo(MapChart);\n\nconst ColorLegend = () => (\n  <div className=\"flex items-center justify-center p-4\">\n      <span className=\"font-semibold text-sm mr-2\">Low (0)</span>\n      <div className=\"flex h-6 w-64 rounded-md overflow-hidden border\">\n          <div style={{ flex: 1, background: 'linear-gradient(to right, #ff4d4d, #ffdb4d, #4dff4d)' }} />\n      </div>\n      <span className=\"font-semibold text-sm ml-2\">High (100)</span>\n  </div>\n)\n\nexport function IndiaMap() {\n  const [content, setContent] = useState('');\n  return (\n    <div className=\"relative w-full border rounded-lg p-2 bg-card\">\n      <TooltipProvider>\n        <Tooltip open={!!content}>\n          <TooltipTrigger asChild>\n            <div>\n              <MemoizedMapChart setTooltipContent={setContent} />\n            </div>\n          </TooltipTrigger>\n          <TooltipContent>\n            <p>{content}</p>\n          </TooltipContent>\n        </Tooltip>\n      </TooltipProvider>\n       <ColorLegend />\n    </div>\n  );\n}\n\n"],"names":[],"mappings":";;;;AAGA;AACA;AAMA;AACA;AACA;AAXA;;;;;;;AAaA,MAAM,kBACJ;AAEF,MAAM,cAAc;IAAC;IAAW;IAAW;CAAU;AAQrD,MAAM,UAAU,IAAI;AACpB,gHAAA,CAAA,UAAe,CAAC,OAAO,CAAC,CAAA,IAAK,QAAQ,GAAG,CAAC,EAAE,KAAK,CAAC,WAAW,IAAI;AAEhE,MAAM,WAAW,CAAC,EAAE,iBAAiB,EAAuE;IAC1G,MAAM,aAAa,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,IAC5B,MAAM,CAAC,gHAAA,CAAA,UAAe,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,KAAK,GACvC,KAAK,CAAC;IAET,qBACE,8OAAC,8JAAA,CAAA,gBAAa;QACZ,YAAW;QACX,kBAAkB;YAChB,OAAO;YACP,QAAQ;gBAAC;gBAAI;aAAG;QAClB;QACA,OAAO;YAAE,OAAO;YAAQ,QAAQ;QAAO;QACvC,YAAS;kBAET,cAAA,8OAAC,8JAAA,CAAA,gBAAa;sBACZ,cAAA,8OAAC,8JAAA,CAAA,cAAW;gBAAC,WAAW;0BACrB,CAAC,EAAE,WAAW,EAAE,GACf,YAAY,GAAG,CAAC,CAAA;wBACd,MAAM,YAAY,IAAI,UAAU,CAAC,KAAK,CAAC,WAAW;wBAClD,MAAM,IAAI,QAAQ,GAAG,CAAC;wBACtB,qBACE,8OAAC,8JAAA,CAAA,YAAS;4BAER,WAAW;4BACX,cAAc;gCACZ,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,UAAU;gCAChC,MAAM,cAAc,QAAQ,GAAG,CAAC,MAAM,WAAW;gCACjD,kBACE,cACI,GAAG,MAAM,OAAO,EAAE,YAAY,IAAI,CAAC,SAAS,EAAE,YAAY,KAAK,CAAC,CAAC,CAAC,GAClE,GAAG,MAAM,SAAS,CAAC;4BAE3B;4BACA,cAAc;gCACZ,kBAAkB;4BACpB;4BACA,OAAO;gCACL,SAAS;oCACP,MAAM,IAAI,WAAW,EAAE,KAAK,IAAI;oCAChC,SAAS;oCACT,QAAQ;oCACR,aAAa;gCACf;gCACA,OAAO;oCACL,MAAM,IAAI,WAAW,EAAE,KAAK,IAAI;oCAChC,SAAS;oCACT,QAAQ;oCACR,aAAa;gCACf;gCACA,SAAS;oCACP,MAAM;oCACN,SAAS;gCACX;4BACF;2BA/BK,IAAI,MAAM;;;;;oBAkCrB;;;;;;;;;;;;;;;;AAMZ;AAEA,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,OAAI,AAAD,EAAE;AAE9B,MAAM,cAAc,kBAClB,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAK,WAAU;0BAA6B;;;;;;0BAC7C,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,OAAO;wBAAE,MAAM;wBAAG,YAAY;oBAAuD;;;;;;;;;;;0BAE9F,8OAAC;gBAAK,WAAU;0BAA6B;;;;;;;;;;;;AAI5C,SAAS;IACd,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,mIAAA,CAAA,kBAAe;0BACd,cAAA,8OAAC,mIAAA,CAAA,UAAO;oBAAC,MAAM,CAAC,CAAC;;sCACf,8OAAC,mIAAA,CAAA,iBAAc;4BAAC,OAAO;sCACrB,cAAA,8OAAC;0CACC,cAAA,8OAAC;oCAAiB,mBAAmB;;;;;;;;;;;;;;;;sCAGzC,8OAAC,mIAAA,CAAA,iBAAc;sCACb,cAAA,8OAAC;0CAAG;;;;;;;;;;;;;;;;;;;;;;0BAIT,8OAAC;;;;;;;;;;;AAGR","debugId":null}}]
}