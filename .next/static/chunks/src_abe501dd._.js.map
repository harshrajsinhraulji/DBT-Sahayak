{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/india-map.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"./ui/dialog\";\nimport { Button } from \"./ui/button\";\n\n// Dataset is now imported from the JSON file\nimport dbtData from \"@/lib/dbt-performance-data.json\";\n\ninterface PerformanceData {\n  Rank: number;\n  State: string;\n  Score: number;\n}\n\nconst DBTMap = () => {\n  const mapRef = useRef<L.Map | null>(null);\n  const geojsonLayerRef = useRef<L.GeoJSON | null>(null);\n  const [selectedState, setSelectedState] = useState<{ name: string; data: PerformanceData | null } | null>(null);\n\n  // build lookup map\n  const dataMap: { [key: string]: PerformanceData } = {};\n  dbtData.forEach((r) => {\n    dataMap[normalizeName(r.State)] = r as PerformanceData;\n  });\n\n  function normalizeName(s: string | null | undefined) {\n    if (!s && s !== 0) return \"\";\n    return String(s)\n      .trim()\n      .toUpperCase()\n      .replace(/\\s+/g, \" \")\n      .replace(/&/g, \" AND \")\n      .replace(/^THE\\s+/, \"\")\n      .replace(/[,\\.]/g, \"\")\n      .replace(/\\sAND\\sTHE\\s/, \" AND THE \")\n      .normalize(\"NFD\")\n      .replace(/\\p{Diacritic}/gu, \"\");\n  }\n\n  function getColor(score: number | null | undefined) {\n    if (score === null || score === undefined || isNaN(score)) return \"#e6e6e6\"; // grey for no data\n    if (score > 80) return \"#16a34a\"; // green\n    if (score > 50) return \"#f59e0b\"; // yellow/orange\n    return \"#ef4444\"; // red\n  }\n\n  function styleFeature(feature: any) {\n    const name = normalizeName(feature.properties.st_nm);\n    const row = dataMap[name];\n    const score = row ? row.Score : null;\n    return {\n      fillColor: getColor(score),\n      weight: 1,\n      opacity: 1,\n      color: \"hsl(var(--background))\",\n      fillOpacity: 0.85,\n    };\n  }\n\n  useEffect(() => {\n    if (mapRef.current) return; // already initialized\n\n    mapRef.current = L.map(\"dbt-map\", { zoomControl: true, minZoom: 4, maxZoom: 7 }).setView([22.5, 82], 4.5);\n\n    L.tileLayer(\"https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png\", {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      maxZoom: 12,\n    }).addTo(mapRef.current);\n\n    const info = L.control({ position: \"topright\" });\n    info.onAdd = function () {\n      this._div = L.DomUtil.create(\"div\", \"dbt-info\");\n      this.update();\n      return this._div;\n    };\n    info.update = function (props?: { displayName: string }) {\n      if (!props) {\n        this._div.innerHTML = `<div class=\"font-bold\">DBT Performance</div><div class=\"text-xs mt-1.5\">Hover a state to see Rank & Score</div>`;\n      } else {\n        const name = props.displayName;\n        const row = dataMap[normalizeName(name)];\n        this._div.innerHTML = `<div class=\"font-bold\">${name}</div><div class=\"text-xs mt-1.5\">Rank: <strong>${row ? row.Rank : \"N/A\"}</strong></div><div class=\"text-xs\">Score: <strong>${row ? row.Score + \"%\" : \"No data\"}</strong></div>`;\n      }\n    };\n    info.addTo(mapRef.current);\n\n    const legend = L.control({ position: \"bottomright\" });\n    legend.onAdd = function () {\n      const div = L.DomUtil.create(\"div\", \"dbt-legend\");\n      div.innerHTML = `\n        <div class=\"font-bold mb-1.5\">Score Legend</div>\n        <div class=\"flex gap-2 items-center\"><span class=\"bg-green-600 w-4 h-3 inline-block rounded-sm\"></span><span>> 80</span></div>\n        <div class=\"flex gap-2 items-center mt-1.5\"><span class=\"bg-yellow-500 w-4 h-3 inline-block rounded-sm\"></span><span>51 - 80</span></div>\n        <div class=\"flex gap-2 items-center mt-1.5\"><span class=\"bg-red-600 w-4 h-3 inline-block rounded-sm\"></span><span><= 50</span></div>\n      `;\n      return div;\n    };\n    legend.addTo(mapRef.current);\n\n    fetch(\"/india_states.geojson\")\n      .then((r) => {\n        if (!r.ok) throw new Error(\"Cannot load geojson\");\n        return r.json();\n      })\n      .then((geo) => {\n        geojsonLayerRef.current = L.geoJson(geo, {\n          style: styleFeature,\n          onEachFeature: function (feature, layer) {\n            const displayName = feature.properties.st_nm || \"Unknown\";\n            const norm = normalizeName(displayName);\n            const row = dataMap[norm];\n            const rank = row ? row.Rank : \"N/A\";\n            const score = row ? row.Score + \"%\" : \"No data\";\n            layer.bindTooltip(`<strong>${displayName}</strong><br/>Rank: ${rank}<br/>Score: ${score}`, { sticky: true, className: 'info-tooltip' });\n\n            layer.on({\n              mouseover: (e) => {\n                const targetLayer = e.target;\n                targetLayer.setStyle({ weight: 2.5, color: \"#111827\", fillOpacity: 0.95 });\n                if (!L.Browser.ie) targetLayer.bringToFront();\n                info.update({ displayName });\n              },\n              mouseout: (e) => {\n                geojsonLayerRef.current?.resetStyle(e.target);\n                info.update();\n              },\n              click: () => {\n                const rowData = dataMap[norm];\n                setSelectedState({ name: displayName, data: rowData || null });\n              },\n            });\n          },\n        }).addTo(mapRef.current!);\n\n        if(mapRef.current) {\n            mapRef.current.fitBounds(geojsonLayerRef.current.getBounds(), { padding: [20, 20] });\n        }\n      })\n      .catch((err) => {\n        console.error(\"GeoJSON loading error:\", err);\n        if(mapRef.current) {\n            const marker = L.marker([22.5, 82]).addTo(mapRef.current);\n            marker.bindPopup(\"Error: Could not load map data. Please check the console.\").openPopup();\n        }\n      });\n\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.remove();\n        mapRef.current = null;\n      }\n    };\n  }, []);\n\n  return (\n    <div>\n      <div id=\"dbt-map\" className=\"h-[75vh] w-full rounded-lg shadow-md z-0\" aria-label=\"DBT performance map\" />\n\n      <Dialog open={!!selectedState} onOpenChange={(isOpen) => !isOpen && setSelectedState(null)}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle className=\"font-headline text-2xl\">{selectedState?.name}</DialogTitle>\n            <DialogDescription>\n              DBT Performance Details\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"py-4\">\n             <div className=\"text-sm text-muted-foreground\">Rank</div>\n             <div className=\"text-3xl font-bold text-primary\">{selectedState?.data ? selectedState.data.Rank : \"N/A\"}</div>\n             <div className=\"text-sm text-muted-foreground mt-4\">Score</div>\n             <div className=\"text-3xl font-bold text-primary\">{selectedState?.data ? selectedState.data.Score + \"%\" : \"No data\"}</div>\n             <div className=\"mt-6 text-muted-foreground text-sm\">\n                <p><strong className=\"text-foreground\">Why it matters:</strong> States with higher Aadhaar seeding and DBT efficiency reach beneficiaries faster and reduce leakages.</p>\n             </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default DBTMap;\n"],"names":[],"mappings":"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","debugId":null}}]
}